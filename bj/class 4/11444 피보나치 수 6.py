# 분할 정복... 피보나치 수가 행렬연산으로 가능하다는 것을 알고 있어야 풀 수 있는 문제
# 풀이 방법은 같은데.. 계산 과정 마다 1000000007로 나눠주는 것이 차이가 큼....
def dfs(n):
    if n == 1:
        return [[1,1],[1,0]]

    if n > 1:
        t = dfs(n//2)
        tmp = [[0,0],[0,0]]
        tmp[0][0] = (t[0][0]*t[0][0] + t[0][1]*t[1][0])%1000000007
        tmp[0][1] = (t[0][0]*t[0][1] + t[0][1]*t[1][1])%1000000007
        tmp[1][0] = (t[1][0]*t[0][0] + t[1][1]*t[1][0])%1000000007
        tmp[1][1] = (t[1][0]*t[0][1] + t[1][1]*t[1][1])%1000000007

        if n%2==1:
            tmp[0][0],tmp[1][0],tmp[0][1],tmp[1][1] = tmp[0][0]+tmp[1][0],tmp[0][0],tmp[0][0],tmp[0][1]

        return tmp
ans = dfs(17)
print(ans[0][1]%1000000007)

'''
내가 구한 답...
def matmul(arr1,arr2):
    return [[arr1[0][0]*arr2[0][0] + arr1[0][1]*arr2[1][0],arr1[0][0]*arr2[0][1] + arr1[0][1]*arr2[1][1]],[arr1[1][0]*arr2[0][0] + arr1[1][1]*arr2[1][0],arr1[1][0]*arr2[0][1] + arr1[1][1]*arr2[1][1]]]
ar = [[1,1],[1,0]]
def dfs(n,arr):
    if n > 1:
        arr = dfs(n//2,arr)
        arr = matmul(arr,arr)
        if n%2 == 1:
            arr = matmul(arr,ar)
    return arr

ans = dfs(int(input()),ar)
print(ans[0][1]%1000000007)

'''
